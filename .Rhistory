devtools::install_github("FantasyFootballAnalytics/ffanalytics")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
sources <- c("CBS", "ESPN", "FantasyData", "FantasyPros",
"FantasySharks", "FleaFlicker", "Yahoo",
"FantasyFootballNerd", "RTSports", "Walterfootball")
scrape <- scrape_data(src = sources,
pos=c('QB', 'RB', 'WR', 'TE', 'DST'),
season = 2020,
week = week)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(ffanalytics)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dtplyr)
library(tidyverse)
library(ffanalytics)
week <- 3
scoring <- list(
pass = list(
pass_att = 0, pass_comp = 0, pass_inc = 0, pass_yds = 0.04, pass_tds = 4,
pass_int = -1, pass_40_yds = 0,  pass_300_yds = 0, pass_350_yds = 0,
pass_400_yds = 0
),
rush = list(
all_pos = TRUE,
rush_yds = 0.1,  rush_att = 0, rush_40_yds = 0, rush_tds = 6,
rush_100_yds = 0, rush_150_yds = 0, rush_200_yds = 0),
rec = list(
all_pos = TRUE,
rec = 0.5, rec_yds = 0.1, rec_tds = 6, rec_40_yds = 0, rec_100_yds = 0,
rec_150_yds = 0, rec_200_yds = 0
),
misc = list(
all_pos = TRUE,
fumbles_lost = -2, fumbles_total = 0,
sacks = 0, two_pts = 2
),
ret = list(
all_pos = TRUE,
return_tds = 6, return_yds = 0
),
dst = list(
dst_fum_rec = 2,  dst_int = 2, dst_safety = 2, dst_sacks = 1, dst_td = 6,
dst_blk = 2, dst_ret_yds = 0, dst_pts_allowed = 0
),
pts_bracket = list(
list(threshold = 0, points = 10),
list(threshold = 1, points = 7),
list(threshold = 7, points = 4),
list(threshold = 14, points = 1),
list(threshold = 21, points = 0),
list(threshold = 28, points = -1),
list(threshold = 35, points = -4)
)
)
sources <- c("CBS", "ESPN", "FantasyData", "FantasyPros",
"FantasySharks", "FleaFlicker", "Yahoo",
"FantasyFootballNerd", "RTSports", "Walterfootball")
scrape <- scrape_data(src = sources,
pos=c('QB', 'RB', 'WR', 'TE', 'DST'),
season = 2020,
week = week)
projections <- projections_table(scrape, scoring_rules = scoring) %>%
add_player_info()
View(projections)
projections %>% filter(avg_type == "robust", last_name = "Hines", last_name == "Brown")
projections %>% filter(avg_type == "robust", last_name == "Hines", last_name == "Brown")
projections %>% filter(avg_type == "robust", last_name == "Hines")
projections %>% filter(avg_type == "robust", last_name == "Brown")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
fan_duel <- read_csv("~/Fall_2020/MATH-390/Data/FanDuel-NFL-2020-10-04-50456-players-list.csv") %>%
filter(is.na(`Injury Indicator`) | `Injury Indicator` == "Q") %>%
mutate(`Last Name` = str_remove_all(`Last Name`, "((?i)III(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)II(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)IV(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)V(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Jr.(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Sr.(?-i))"),
Name = str_c(`First Name`, `Last Name`, sep = " ")) %>%
select(-c(Id, Tier, X15, X16, Game)) %>%
mutate(position = case_when(
Position == "D" ~ "DST",
TRUE ~ as.character(Position)
))
library(data.table)
library(dtplyr)
library(tidyverse)
library(ffanalytics)
library(lpSolve)
library(rPref)
library(kableExtra)
library(plotly)
library(tictoc)
fan_duel <- read_csv("~/Fall_2020/MATH-390/Data/FanDuel-NFL-2020-10-04-50456-players-list.csv") %>%
filter(is.na(`Injury Indicator`) | `Injury Indicator` == "Q") %>%
mutate(`Last Name` = str_remove_all(`Last Name`, "((?i)III(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)II(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)IV(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)V(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Jr.(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Sr.(?-i))"),
Name = str_c(`First Name`, `Last Name`, sep = " ")) %>%
select(-c(Id, Tier, X15, X16, Game)) %>%
mutate(position = case_when(
Position == "D" ~ "DST",
TRUE ~ as.character(Position)
))
View(fan_duel)
generate_lineup <- function(n){
pred_sal <- projections %>%
filter(avg_type == "robust") %>%
mutate(Name = str_c(first_name, last_name, sep = " ")) %>%
inner_join(fan_duel, by = c("Name", "position")) %>%
select(position, Name, team, points, Salary, sd_pts) %>%
drop_na(points, Salary) %>%
group_by(Name) %>%
mutate(sal_max = max(Salary)) %>%
filter(Salary == sal_max) %>%
group_by(Name) %>%
mutate(pts_pred = rnorm(1, points, sd_pts), lineup = n) %>%
select(-sal_max)
obj <- pred_sal$pts_pred
mat <- rbind(t(model.matrix(~ position + 0,pred_sal)),
t(model.matrix(~ position + 0,pred_sal)),
rep(1, nrow(pred_sal)), pred_sal$Salary)
dir <- c("=","=","<=","<=","<=", "=","=",">=",">=",">=","=","<=")
rhs <- c(1, 1, 3, 2, 4, 1, 1, 2, 1, 3, 9, 60000)
result <- lp("max", obj, mat, dir, rhs, all.bin = TRUE)
results <- pred_sal[which(result$solution == 1),]
return(results)
}
week <- 4
scoring <- list(
pass = list(
pass_att = 0, pass_comp = 0, pass_inc = 0, pass_yds = 0.04, pass_tds = 4,
pass_int = -1, pass_40_yds = 0,  pass_300_yds = 0, pass_350_yds = 0,
pass_400_yds = 0
),
rush = list(
all_pos = TRUE,
rush_yds = 0.1,  rush_att = 0, rush_40_yds = 0, rush_tds = 6,
rush_100_yds = 0, rush_150_yds = 0, rush_200_yds = 0),
rec = list(
all_pos = TRUE,
rec = 0.5, rec_yds = 0.1, rec_tds = 6, rec_40_yds = 0, rec_100_yds = 0,
rec_150_yds = 0, rec_200_yds = 0
),
misc = list(
all_pos = TRUE,
fumbles_lost = -2, fumbles_total = 0,
sacks = 0, two_pts = 2
),
ret = list(
all_pos = TRUE,
return_tds = 6, return_yds = 0
),
dst = list(
dst_fum_rec = 2,  dst_int = 2, dst_safety = 2, dst_sacks = 1, dst_td = 6,
dst_blk = 2, dst_ret_yds = 0, dst_pts_allowed = 0
),
pts_bracket = list(
list(threshold = 0, points = 10),
list(threshold = 1, points = 7),
list(threshold = 7, points = 4),
list(threshold = 14, points = 1),
list(threshold = 21, points = 0),
list(threshold = 28, points = -1),
list(threshold = 35, points = -4)
)
)
sources <- c("ESPN", "FantasyData", "FantasyPros",
"Yahoo", "RTSports", "Walterfootball")
scrape <- scrape_data(src = sources,
pos=c('QB', 'RB', 'WR', 'TE', 'DST'),
season = 2020,
week = week)
projections <- projections_table(scrape, scoring_rules = scoring) %>%
add_player_info()
View(projections)
sources <- c("ESPN", "FantasyData", "FantasyPros", "Yahoo", "RTSports", "Walterfootball")
scrape <- scrape_data(src = sources,
pos=c('QB', 'RB', 'WR', 'TE', 'DST'),
season = 2020,
week = week)
fan_duel <- read_csv("~/Fall_2020/MATH-390/Data/FanDuel-NFL-2020-10-04-50456-players-list.csv") %>%
filter(is.na(`Injury Indicator`) | `Injury Indicator` == "Q") %>%
mutate(`Last Name` = str_remove_all(`Last Name`, "((?i)III(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)II(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)IV(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)V(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Jr.(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Sr.(?-i))"),
Name = str_c(`First Name`, `Last Name`, sep = " ")) %>%
select(-c(Id, Tier, X15, X16, Game)) %>%
mutate(position = case_when(
Position == "D" ~ "DST",
TRUE ~ as.character(Position)
))
n_sims <- 10000
tic()
sim_lu <- map_df(1:n_sims, generate_lineup) %>%
rename(pts_base = points) %>%
mutate(position = factor(position,
levels = c("QB", "RB", "WR", "TE", "DST"))) %>%
select(lineup, Name, team, position, pts_base, pts_pred, sd_pts, Salary)
n_sims <- 100
tic()
sim_lu <- map_df(1:n_sims, generate_lineup) %>%
rename(pts_base = points) %>%
mutate(position = factor(position,
levels = c("QB", "RB", "WR", "TE", "DST"))) %>%
select(lineup, Name, team, position, pts_base, pts_pred, sd_pts, Salary)
toc()
View(sim_lu)
?scrape_datat
?scrape_data
sources <- c("CBS", "ESPN", "FantasyData", "FantasyPros", "FantasySharks", "FFToday",
"FleaFlicker", "NumberFire", "Yahoo", "FantasyFootballNerd", "NFL", "RTSports",
"Walterfootball")
scrape <- scrape_data(src = sources,
pos = c('QB', 'RB', 'WR', 'TE', 'DST'),
season = 2020,
week = week)
projections <- projections_table(scrape, scoring_rules = scoring) %>%
add_player_info()
fan_duel <- read_csv("~/Fall_2020/MATH-390/Data/FanDuel-NFL-2020-10-04-50456-players-list.csv") %>%
filter(is.na(`Injury Indicator`) | `Injury Indicator` == "Q") %>%
mutate(`Last Name` = str_remove_all(`Last Name`, "((?i)III(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)II(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)IV(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)V(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Jr.(?-i))"),
`Last Name` = str_remove_all(`Last Name`, "((?i)Sr.(?-i))"),
Name = str_c(`First Name`, `Last Name`, sep = " ")) %>%
select(-c(Id, Tier, X15, X16, Game)) %>%
mutate(position = case_when(
Position == "D" ~ "DST",
TRUE ~ as.character(Position)
))
generate_lineup <- function(n){
pred_sal <- projections %>%
filter(avg_type == "robust") %>%
mutate(Name = str_c(first_name, last_name, sep = " ")) %>%
inner_join(fan_duel, by = c("Name", "position")) %>%
select(position, Name, team, points, Salary, sd_pts) %>%
drop_na(points, Salary) %>%
group_by(Name) %>%
mutate(sal_max = max(Salary)) %>%
filter(Salary == sal_max) %>%
group_by(Name) %>%
mutate(pts_pred = rnorm(1, points, sd_pts), lineup = n) %>%
select(-sal_max)
obj <- pred_sal$pts_pred
mat <- rbind(t(model.matrix(~ position + 0,pred_sal)),
t(model.matrix(~ position + 0,pred_sal)),
rep(1, nrow(pred_sal)), pred_sal$Salary)
dir <- c("=","=","<=","<=","<=", "=","=",">=",">=",">=","=","<=")
rhs <- c(1, 1, 3, 2, 4, 1, 1, 2, 1, 3, 9, 60000)
result <- lp("max", obj, mat, dir, rhs, all.bin = TRUE)
results <- pred_sal[which(result$solution == 1),]
return(results)
}
n_sims <- 100
tic()
sim_lu <- map_df(1:n_sims, generate_lineup) %>%
rename(pts_base = points) %>%
mutate(position = factor(position,
levels = c("QB", "RB", "WR", "TE", "DST"))) %>%
select(lineup, Name, team, position, pts_base, pts_pred, sd_pts, Salary)
toc()
sim_lu %>%
filter(lineup<=3) %>%
arrange(lineup, position, desc(pts_pred)) %>%
knitr::kable() %>%
kable_styling() %>%
column_spec(1, bold=TRUE) %>%
collapse_rows(columns = 1, valign = 'top')
